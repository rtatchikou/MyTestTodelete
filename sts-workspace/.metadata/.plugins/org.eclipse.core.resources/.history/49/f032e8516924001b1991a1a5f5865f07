package com.lyncwork.services.store.service.mapper;

import com.lyncwork.services.store.domain.TaskWork;
import com.lyncwork.services.store.service.dto.TaskWorkDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2020-11-09T21:52:47-0500",
    comments = "version: 1.3.1.Final, compiler: javac, environment: Java 11.0.9 (Oracle Corporation)"
)
@Component
public class TaskWorkMapperImpl implements TaskWorkMapper {

    @Autowired
    private LyncWorkUserMapper lyncWorkUserMapper;
    @Autowired
    private TaskMapper taskMapper;

    @Override
    public List<TaskWork> toEntity(List<TaskWorkDTO> dtoList) {
        if ( dtoList == null ) {
            return null;
        }

        List<TaskWork> list = new ArrayList<TaskWork>( dtoList.size() );
        for ( TaskWorkDTO taskWorkDTO : dtoList ) {
            list.add( toEntity( taskWorkDTO ) );
        }

        return list;
    }

    @Override
    public List<TaskWorkDTO> toDto(List<TaskWork> entityList) {
        if ( entityList == null ) {
            return null;
        }

        List<TaskWorkDTO> list = new ArrayList<TaskWorkDTO>( entityList.size() );
        for ( TaskWork taskWork : entityList ) {
            list.add( toDto( taskWork ) );
        }

        return list;
    }

    @Override
    public TaskWork toEntity(TaskWorkDTO dto) {
        if ( dto == null ) {
            return null;
        }

        TaskWork taskWork = new TaskWork();

        taskWork.setLyncWorkUser( lyncWorkUserMapper.toEntity( dto.getLyncWorkUser() ) );
        taskWork.setTask( taskMapper.toEntity( dto.getTask() ) );
        taskWork.setId( dto.getId() );
        taskWork.setSysCreationDate( dto.getSysCreationDate() );
        taskWork.setSysUpdateDate( dto.getSysUpdateDate() );
        taskWork.setLastUpdatedBy( dto.getLastUpdatedBy() );
        taskWork.setSchedStartDate( dto.getSchedStartDate() );
        taskWork.setSchedDueDate( dto.getSchedDueDate() );
        taskWork.setActualStartDate( dto.getActualStartDate() );
        taskWork.setActualCompleteDate( dto.getActualCompleteDate() );
        taskWork.setSupervisedBy( dto.getSupervisedBy() );
        taskWork.setStatus( dto.getStatus() );

        return taskWork;
    }

    @Override
    public TaskWorkDTO toDto(TaskWork entity) {
        if ( entity == null ) {
            return null;
        }

        TaskWorkDTO taskWorkDTO = new TaskWorkDTO();

        taskWorkDTO.setLyncWorkUser( lyncWorkUserMapper.toDto( entity.getLyncWorkUser() ) );
        taskWorkDTO.setTask( taskMapper.toDto( entity.getTask() ) );
        taskWorkDTO.setId( entity.getId() );
        taskWorkDTO.setSysCreationDate( entity.getSysCreationDate() );
        taskWorkDTO.setSysUpdateDate( entity.getSysUpdateDate() );
        taskWorkDTO.setLastUpdatedBy( entity.getLastUpdatedBy() );
        taskWorkDTO.setSchedStartDate( entity.getSchedStartDate() );
        taskWorkDTO.setSchedDueDate( entity.getSchedDueDate() );
        taskWorkDTO.setActualStartDate( entity.getActualStartDate() );
        taskWorkDTO.setActualCompleteDate( entity.getActualCompleteDate() );
        taskWorkDTO.setSupervisedBy( entity.getSupervisedBy() );
        taskWorkDTO.setStatus( entity.getStatus() );

        return taskWorkDTO;
    }
}
