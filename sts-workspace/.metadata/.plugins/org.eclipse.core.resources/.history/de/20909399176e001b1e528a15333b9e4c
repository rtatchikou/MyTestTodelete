package com.lyncwork.services.hellosign.client.dropbox.model.request.teamfolder.list;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


@JsonInclude(JsonInclude.Include.NON_NULL)
public class ListFolderRequest {

	@JsonProperty("path")
	private String path;

	@JsonProperty("recursive")
	private boolean recursive;

	@JsonProperty("include_media_info")
	private boolean includeMediaInfo;

	@JsonProperty("include_deleted")
	private boolean includeDeleted;

	@JsonProperty("include_has_explicit_shared_members")
	private boolean includeHasExplicitSharedMembers;

	@JsonProperty("include_mounted_folders")
	private boolean includeMountedFolders;

	@JsonProperty("include_non_downloadable_files")
	private boolean includeNonDownloadableFiles;

	public String getPath() {
		return path;
	}

	public void setPath(String path) {
		this.path = path;
	}

	public boolean isRecursive() {
		return recursive;
	}

	public void setRecursive(boolean recursive) {
		this.recursive = recursive;
	}

	public boolean isIncludeMediaInfo() {
		return includeMediaInfo;
	}

	public void setIncludeMediaInfo(boolean includeMediaInfo) {
		this.includeMediaInfo = includeMediaInfo;
	}

	public boolean isIncludeDeleted() {
		return includeDeleted;
	}

	public void setIncludeDeleted(boolean includeDeleted) {
		this.includeDeleted = includeDeleted;
	}

	public boolean isIncludeHasExplicitSharedMembers() {
		return includeHasExplicitSharedMembers;
	}

	public void setIncludeHasExplicitSharedMembers(boolean includeHasExplicitSharedMembers) {
		this.includeHasExplicitSharedMembers = includeHasExplicitSharedMembers;
	}

	public boolean isIncludeMountedFolders() {
		return includeMountedFolders;
	}

	public void setIncludeMountedFolders(boolean includeMountedFolders) {
		this.includeMountedFolders = includeMountedFolders;
	}

	public boolean isIncludeNonDownloadableFiles() {
		return includeNonDownloadableFiles;
	}

	public void setIncludeNonDownloadableFiles(boolean includeNonDownloadableFiles) {
		this.includeNonDownloadableFiles = includeNonDownloadableFiles;
	}

	@Override
	public String toString() {
		return "ListFolderRequest{" +
				"path=" + path +
				", recursive=" + recursive +
				", includeMediaInfo=" + includeMediaInfo +
				", includeDeleted=" + includeDeleted +
				", includeHasExplicitSharedMembers=" + includeHasExplicitSharedMembers +
				", includeMountedFolders=" + includeMountedFolders +
				", includeNonDownloadableFiles=" + includeNonDownloadableFiles +
				'}';
	}
}


