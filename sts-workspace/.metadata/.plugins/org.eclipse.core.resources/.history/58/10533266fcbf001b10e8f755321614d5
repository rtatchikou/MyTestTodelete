package com.efunzo.be.training.contoller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.util.CollectionUtils;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.efunzo.be.training.domaine.Address;
import com.efunzo.be.training.domaine.User;
import com.efunzo.be.training.service.UserService;


@RestController
@RequestMapping("/api")
public class AddressController {
	
	@Autowired
	private UserService userService;
	
	
	@PostMapping("/address")
	public ResponseEntity<Address> saveAddress(@RequestBody Address address) {
		
		Address addressResponse = userService.addUser(user);

		return ResponseEntity.status(HttpStatus.OK).body(userResponse);
	}
	
	@GetMapping("/address/id")
	public ResponseEntity<Address> findById(@PathVariable(value = "id") Integer id) {
		
		User userResponse = userService.findById(id);

		return ResponseEntity.status(HttpStatus.OK).body(userResponse);
	}
	
	@PutMapping("/address")
	public ResponseEntity<Address> updateUser(@RequestBody User user) {

		User userResponse = userService.updateUser(user);
		
		return ResponseEntity.status(HttpStatus.OK).body(userResponse);
	}
	
	@DeleteMapping("/address/id")
	public ResponseEntity<Address> deleteUser(@PathVariable(value = "id") Integer id) {
		
		User userResponse = userService.deleteUser(id);

		return ResponseEntity.status(HttpStatus.OK).body(userResponse);
	}
	
	
	

}
