package com.lyncwork.services.dropbox.service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.lyncwork.services.hellosign.domain.User;
import com.lyncwork.services.hellosign.repository.UserRepository;
import com.lyncwork.services.hellosign.service.dto.UserDTO;
import com.lyncwork.services.hellosign.service.mapper.UserMapper;

import java.util.Optional;

/**
 * Service Implementation for managing {@link UserService}.
 */
@Service
@Transactional
public class UserService {

    private final Logger log = LoggerFactory.getLogger(UserService.class);

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private UserMapper userMapper;


    @Transactional(readOnly = true)
    public Optional<UserDTO> findUserByUserNameAndCompanyId(String userName, Long companyId) {
        log.debug("Request to get user by username: {} and company id : {}", userName,companyId);
        User user= userRepository.findByUsernameAndCompany_Id(userName, companyId);
        UserDTO userDTO = userMapper.toDto(user);
        return Optional.ofNullable(userDTO);
    }

    @Transactional(readOnly = true)
    public UserDTO save(UserDTO userDTO) {
        log.debug("Request to save file : {}", userDTO);
        User user = userMapper.toEntity(userDTO);
        user = userRepository.save(user);
        UserDTO result = userMapper.toDto(user);
        return result;
    }



}
