package com.lyncwork.services.store.service.mapper;

import com.lyncwork.services.store.domain.TaskProperty;
import com.lyncwork.services.store.service.dto.TaskPropertyDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2020-11-10T19:26:39-0500",
    comments = "version: 1.3.1.Final, compiler: javac, environment: Java 11.0.9 (Oracle Corporation)"
)
@Component
public class TaskPropertyMapperImpl implements TaskPropertyMapper {

    @Autowired
    private TaskMapper taskMapper;

    @Override
    public List<TaskProperty> toEntity(List<TaskPropertyDTO> dtoList) {
        if ( dtoList == null ) {
            return null;
        }

        List<TaskProperty> list = new ArrayList<TaskProperty>( dtoList.size() );
        for ( TaskPropertyDTO taskPropertyDTO : dtoList ) {
            list.add( toEntity( taskPropertyDTO ) );
        }

        return list;
    }

    @Override
    public List<TaskPropertyDTO> toDto(List<TaskProperty> entityList) {
        if ( entityList == null ) {
            return null;
        }

        List<TaskPropertyDTO> list = new ArrayList<TaskPropertyDTO>( entityList.size() );
        for ( TaskProperty taskProperty : entityList ) {
            list.add( toDto( taskProperty ) );
        }

        return list;
    }

    @Override
    public TaskProperty toEntity(TaskPropertyDTO dto) {
        if ( dto == null ) {
            return null;
        }

        TaskProperty taskProperty = new TaskProperty();

        taskProperty.setTask( taskMapper.toEntity( dto.getTask() ) );
        taskProperty.setId( dto.getId() );
        taskProperty.setKey( dto.getKey() );
        taskProperty.setValue( dto.getValue() );

        return taskProperty;
    }

    @Override
    public TaskPropertyDTO toDto(TaskProperty entity) {
        if ( entity == null ) {
            return null;
        }

        TaskPropertyDTO taskPropertyDTO = new TaskPropertyDTO();

        taskPropertyDTO.setId( entity.getId() );
        taskPropertyDTO.setKey( entity.getKey() );
        taskPropertyDTO.setValue( entity.getValue() );

        return taskPropertyDTO;
    }
}
