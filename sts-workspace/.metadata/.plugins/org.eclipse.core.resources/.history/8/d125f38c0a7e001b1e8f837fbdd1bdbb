<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>Auth.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Dropbox</a> &gt; <a href="index.source.html" class="el_package">com.lyncwork.services.dropbox.client.dropbox.domaine</a> &gt; <span class="el_source">Auth.java</span></div><h1>Auth.java</h1><pre class="source lang-java linenums">package com.lyncwork.services.dropbox.client.dropbox.domaine;

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;

import javax.persistence.*;
import java.time.Instant;

@Entity
@Table(name = &quot;auth&quot;)
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
<span class="nc" id="L15">public class Auth  {</span>


    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = &quot;access_token&quot;)
    private String accessToken;

    @Column(name = &quot;token_type&quot;)
    private String tokenType;

    @Column(name = &quot;expires_in&quot;)
    private int expiresIn;

    @Column(name = &quot;team_id&quot;)
    private String teamId;

    @Column(name = &quot;scope&quot;)
    private String scope;

    @Column(name = &quot;refresh_token&quot;)
    private String refreshToken;

    @Column(name = &quot;client_id&quot;)
    private String clientId;

    @CreatedDate
    @Column(name = &quot;created_at&quot;)
    @JsonIgnore
    private Instant createdAt;

    @LastModifiedDate
    @Column(name = &quot;updated_at&quot;)
    @JsonIgnore
    private Instant updatedAt;

    @Column(name = &quot;token_expired_at&quot;)
    private Instant tokenExpiredAt;



    public Long getId() {
<span class="nc" id="L59">        return id;</span>
    }

    public void setId(Long id) {
<span class="nc" id="L63">        this.id = id;</span>
<span class="nc" id="L64">    }</span>

    public String getAccessToken() {
<span class="nc" id="L67">        return accessToken;</span>
    }

    public void setAccessToken(String accessToken) {
<span class="nc" id="L71">        this.accessToken = accessToken;</span>
<span class="nc" id="L72">    }</span>
    public String getTokenType() {
<span class="nc" id="L74">        return tokenType;</span>
    }

    public void setTokenType(String tokenType) {
<span class="nc" id="L78">        this.tokenType = tokenType;</span>
<span class="nc" id="L79">    }</span>

    public int getExpiresIn() {
<span class="nc" id="L82">        return expiresIn;</span>
    }

    public void setExpiresIn(int expiresIn) {
<span class="nc" id="L86">        this.expiresIn = expiresIn;</span>
<span class="nc" id="L87">    }</span>

    public String getTeamId() {
<span class="nc" id="L90">        return teamId;</span>
    }

    public void setTeamId(String teamId) {
<span class="nc" id="L94">        this.teamId = teamId;</span>
<span class="nc" id="L95">    }</span>

    public String getScope() {
<span class="nc" id="L98">        return scope;</span>
    }

    public void setScope(String scope) {
<span class="nc" id="L102">        this.scope = scope;</span>
<span class="nc" id="L103">    }</span>

    public String getRefreshToken() {
<span class="nc" id="L106">        return refreshToken;</span>
    }

    public void setRefreshToken(String refreshToken) {
<span class="nc" id="L110">        this.refreshToken = refreshToken;</span>
<span class="nc" id="L111">    }</span>

    public String getClientId() {
<span class="nc" id="L114">        return clientId;</span>
    }

    public void setClientId(String clientId) {
<span class="nc" id="L118">        this.clientId = clientId;</span>
<span class="nc" id="L119">    }</span>

    public Instant getCreatedAt() {
<span class="nc" id="L122">        return createdAt;</span>
    }

    public void setCreatedAt(Instant createdAt) {
<span class="nc" id="L126">        this.createdAt = createdAt;</span>
<span class="nc" id="L127">    }</span>

    public Instant getUpdatedAt() {
<span class="nc" id="L130">        return updatedAt;</span>
    }

    public void setUpdatedAt(Instant updatedAt) {
<span class="nc" id="L134">        this.updatedAt = updatedAt;</span>
<span class="nc" id="L135">    }</span>

    public Instant getTokenExpiredAt() {
<span class="nc" id="L138">        return tokenExpiredAt;</span>
    }

    public void setTokenExpiredAt(Instant tokenExpiredAt) {
<span class="nc" id="L142">        this.tokenExpiredAt = tokenExpiredAt;</span>
<span class="nc" id="L143">    }</span>

    public boolean validToken() {
<span class="nc" id="L146">        Instant now = Instant.now();</span>
<span class="nc" id="L147">        return tokenExpiredAt.isAfter(now);</span>
    }

    @Override
    public String toString() {
<span class="nc" id="L152">        return &quot;Auth{&quot; +</span>
                &quot;id=&quot; + id +
                &quot;, accessToken='&quot; + accessToken + '\'' +
                &quot;, tokenType='&quot; + tokenType + '\'' +
                &quot;, expiresIn=&quot; + expiresIn +
                &quot;, teamId='&quot; + teamId + '\'' +
                &quot;, scope='&quot; + scope + '\'' +
                &quot;, refreshToken='&quot; + refreshToken + '\'' +
                &quot;, clientId='&quot; + clientId + '\'' +
                &quot;, createdAt=&quot; + createdAt +
                &quot;, updatedAt=&quot; + updatedAt +
                &quot;, tokenExpiredAt=&quot; + tokenExpiredAt +
                '}';
    }
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.5.201910111838</span></div></body></html>