<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>File.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Dropbox</a> &gt; <a href="index.source.html" class="el_package">com.lyncwork.services.dropbox.domain</a> &gt; <span class="el_source">File.java</span></div><h1>File.java</h1><pre class="source lang-java linenums">package com.lyncwork.services.dropbox.domain;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Cascade;

import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * A Company.
 */
@Entity
@Table(name = &quot;file&quot;)
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
<span class="nc" id="L19">public class File implements Serializable {</span>

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotBlank
    @Column(name = &quot;file_name&quot;)
    private String fileName;

    @NotBlank
    @Column(name = &quot;file_path&quot;)
    private String filePath;

    @ManyToOne
    @JoinColumn(name = &quot;user_id&quot;)
    private User fileOwner;

<span class="nc" id="L39">    @ManyToMany(fetch = FetchType.EAGER)</span>
    @JoinTable(name = &quot;file_users&quot;,
            joinColumns = {@JoinColumn(name = &quot;file_id&quot;, referencedColumnName = &quot;id&quot;)},
            inverseJoinColumns = {@JoinColumn(name = &quot;user_id&quot;, referencedColumnName = &quot;id&quot;)})
    @Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
    Set&lt;User&gt; sharers = new HashSet&lt;&gt;();

    public Long getId() {
<span class="nc" id="L48">        return id;</span>
    }

    public void setId(Long id) {
<span class="nc" id="L52">        this.id = id;</span>
<span class="nc" id="L53">    }</span>

    public String getFileName() {
<span class="nc" id="L56">        return fileName;</span>
    }

    public void setFileName(String fileName) {
<span class="nc" id="L60">        this.fileName = fileName;</span>
<span class="nc" id="L61">    }</span>

    public String getFilePath() {
<span class="nc" id="L64">        return filePath;</span>
    }

    public void setFilePath(String filePath) {
<span class="nc" id="L68">        this.filePath = filePath;</span>
<span class="nc" id="L69">    }</span>

    public User getFileOwner() {
<span class="nc" id="L72">        return fileOwner;</span>
    }

    public void setFileOwner(User fileOwner) {
<span class="nc" id="L76">        this.fileOwner = fileOwner;</span>
<span class="nc" id="L77">    }</span>

    public Set&lt;User&gt; getSharers() {
<span class="nc" id="L80">        return sharers;</span>
    }

    public void setSharers(Set&lt;User&gt; sharers) {
<span class="nc" id="L84">        this.sharers = sharers;</span>
<span class="nc" id="L85">    }</span>

    @Override
    public String toString() {
<span class="nc" id="L89">        return &quot;File{&quot; +</span>
                &quot;id=&quot; + id +
                &quot;, fileName='&quot; + fileName + '\'' +
                &quot;, filePath='&quot; + filePath + '\'' +
                &quot;, fileOwner=&quot; + fileOwner +
                &quot;, sharers=&quot; + sharers +
                '}';
    }
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.5.201910111838</span></div></body></html>