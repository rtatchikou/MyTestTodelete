package com.lyncwork.services.store.service.mapper;

import com.lyncwork.services.store.domain.SubscriptionApp;
import com.lyncwork.services.store.domain.SubscriptionAppProperty;
import com.lyncwork.services.store.service.dto.SubscriptionAppPropertyDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2020-11-10T19:26:39-0500",
    comments = "version: 1.3.1.Final, compiler: javac, environment: Java 11.0.9 (Oracle Corporation)"
)
@Component
public class SubscriptionAppPropertyMapperImpl implements SubscriptionAppPropertyMapper {

    @Autowired
    private SubscriptionAppMapper subscriptionAppMapper;

    @Override
    public List<SubscriptionAppProperty> toEntity(List<SubscriptionAppPropertyDTO> dtoList) {
        if ( dtoList == null ) {
            return null;
        }

        List<SubscriptionAppProperty> list = new ArrayList<SubscriptionAppProperty>( dtoList.size() );
        for ( SubscriptionAppPropertyDTO subscriptionAppPropertyDTO : dtoList ) {
            list.add( toEntity( subscriptionAppPropertyDTO ) );
        }

        return list;
    }

    @Override
    public List<SubscriptionAppPropertyDTO> toDto(List<SubscriptionAppProperty> entityList) {
        if ( entityList == null ) {
            return null;
        }

        List<SubscriptionAppPropertyDTO> list = new ArrayList<SubscriptionAppPropertyDTO>( entityList.size() );
        for ( SubscriptionAppProperty subscriptionAppProperty : entityList ) {
            list.add( toDto( subscriptionAppProperty ) );
        }

        return list;
    }

    @Override
    public SubscriptionAppPropertyDTO toDto(SubscriptionAppProperty subscriptionAppProperty) {
        if ( subscriptionAppProperty == null ) {
            return null;
        }

        SubscriptionAppPropertyDTO subscriptionAppPropertyDTO = new SubscriptionAppPropertyDTO();

        subscriptionAppPropertyDTO.setSubscriptionAppId( subscriptionAppPropertySubscriptionAppId( subscriptionAppProperty ) );
        subscriptionAppPropertyDTO.setId( subscriptionAppProperty.getId() );
        subscriptionAppPropertyDTO.setKey( subscriptionAppProperty.getKey() );
        subscriptionAppPropertyDTO.setValue( subscriptionAppProperty.getValue() );

        return subscriptionAppPropertyDTO;
    }

    @Override
    public SubscriptionAppProperty toEntity(SubscriptionAppPropertyDTO subscriptionAppPropertyDTO) {
        if ( subscriptionAppPropertyDTO == null ) {
            return null;
        }

        SubscriptionAppProperty subscriptionAppProperty = new SubscriptionAppProperty();

        subscriptionAppProperty.setSubscriptionApp( subscriptionAppMapper.fromId( subscriptionAppPropertyDTO.getSubscriptionAppId() ) );
        subscriptionAppProperty.setId( subscriptionAppPropertyDTO.getId() );
        subscriptionAppProperty.setKey( subscriptionAppPropertyDTO.getKey() );
        subscriptionAppProperty.setValue( subscriptionAppPropertyDTO.getValue() );

        return subscriptionAppProperty;
    }

    private Long subscriptionAppPropertySubscriptionAppId(SubscriptionAppProperty subscriptionAppProperty) {
        if ( subscriptionAppProperty == null ) {
            return null;
        }
        SubscriptionApp subscriptionApp = subscriptionAppProperty.getSubscriptionApp();
        if ( subscriptionApp == null ) {
            return null;
        }
        Long id = subscriptionApp.getId();
        if ( id == null ) {
            return null;
        }
        return id;
    }
}
