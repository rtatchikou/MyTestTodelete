package com.lyncwork.services.gusto.service.mapper;

import com.lyncwork.services.expensify.domain.UserIntegrationMessage;
import com.lyncwork.services.expensify.service.dto.UserIntegrationMessageDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2020-12-11T17:10:10-0500",
    comments = "version: 1.3.1.Final, compiler: Eclipse JDT (IDE) 1.3.1100.v20200828-0941, environment: Java 15 (Oracle Corporation)"
)
@Component
public class UserIntegrationMessageMapperImpl implements UserIntegrationMessageMapper {

    @Override
    public List<UserIntegrationMessageDTO> toDto(List<UserIntegrationMessage> arg0) {
        if ( arg0 == null ) {
            return null;
        }

        List<UserIntegrationMessageDTO> list = new ArrayList<UserIntegrationMessageDTO>( arg0.size() );
        for ( UserIntegrationMessage userIntegrationMessage : arg0 ) {
            list.add( toDto( userIntegrationMessage ) );
        }

        return list;
    }

    @Override
    public List<UserIntegrationMessage> toEntity(List<UserIntegrationMessageDTO> arg0) {
        if ( arg0 == null ) {
            return null;
        }

        List<UserIntegrationMessage> list = new ArrayList<UserIntegrationMessage>( arg0.size() );
        for ( UserIntegrationMessageDTO userIntegrationMessageDTO : arg0 ) {
            list.add( toEntity( userIntegrationMessageDTO ) );
        }

        return list;
    }

    @Override
    public UserIntegrationMessage toEntity(UserIntegrationMessageDTO dto) {
        if ( dto == null ) {
            return null;
        }

        UserIntegrationMessage userIntegrationMessage = new UserIntegrationMessage();

        userIntegrationMessage.setMessage( UserIntegrationMessageMapper.messageDTOToString( dto.getMessage() ) );
        userIntegrationMessage.setAction( dto.getAction() );
        userIntegrationMessage.setId( dto.getId() );
        userIntegrationMessage.setPublisher( dto.getPublisher() );
        userIntegrationMessage.setStatus( dto.getStatus() );

        return userIntegrationMessage;
    }

    @Override
    public UserIntegrationMessageDTO toDto(UserIntegrationMessage entity) {
        if ( entity == null ) {
            return null;
        }

        UserIntegrationMessageDTO userIntegrationMessageDTO = new UserIntegrationMessageDTO();

        userIntegrationMessageDTO.setMessage( UserIntegrationMessageMapper.stringToMessageDTO( entity.getMessage() ) );
        userIntegrationMessageDTO.setId( entity.getId() );
        userIntegrationMessageDTO.setPublisher( entity.getPublisher() );
        userIntegrationMessageDTO.setAction( entity.getAction() );
        userIntegrationMessageDTO.setStatus( entity.getStatus() );

        return userIntegrationMessageDTO;
    }
}
