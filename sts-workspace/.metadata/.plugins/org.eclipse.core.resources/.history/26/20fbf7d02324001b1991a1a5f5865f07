package com.lyncwork.services.store.service.mapper;

import com.lyncwork.services.store.domain.EmailMessage;
import com.lyncwork.services.store.service.dto.EmailMessageDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2020-11-10T19:26:39-0500",
    comments = "version: 1.3.1.Final, compiler: javac, environment: Java 11.0.9 (Oracle Corporation)"
)
@Component
public class EmailMessageMapperImpl implements EmailMessageMapper {

    @Override
    public List<EmailMessage> toEntity(List<EmailMessageDTO> dtoList) {
        if ( dtoList == null ) {
            return null;
        }

        List<EmailMessage> list = new ArrayList<EmailMessage>( dtoList.size() );
        for ( EmailMessageDTO emailMessageDTO : dtoList ) {
            list.add( toEntity( emailMessageDTO ) );
        }

        return list;
    }

    @Override
    public List<EmailMessageDTO> toDto(List<EmailMessage> entityList) {
        if ( entityList == null ) {
            return null;
        }

        List<EmailMessageDTO> list = new ArrayList<EmailMessageDTO>( entityList.size() );
        for ( EmailMessage emailMessage : entityList ) {
            list.add( toDto( emailMessage ) );
        }

        return list;
    }

    @Override
    public EmailMessage toEntity(EmailMessageDTO dto) {
        if ( dto == null ) {
            return null;
        }

        EmailMessage emailMessage = new EmailMessage();

        emailMessage.setId( dto.getId() );
        emailMessage.setSent( dto.isSent() );
        emailMessage.setToAddress( dto.getToAddress() );
        emailMessage.setFromAddress( dto.getFromAddress() );
        emailMessage.setSubject( dto.getSubject() );
        emailMessage.setBody( dto.getBody() );
        emailMessage.setCreatedDate( dto.getCreatedDate() );
        emailMessage.setType( dto.getType() );

        return emailMessage;
    }

    @Override
    public EmailMessageDTO toDto(EmailMessage entity) {
        if ( entity == null ) {
            return null;
        }

        EmailMessageDTO emailMessageDTO = new EmailMessageDTO();

        emailMessageDTO.setId( entity.getId() );
        emailMessageDTO.setSent( entity.isSent() );
        emailMessageDTO.setToAddress( entity.getToAddress() );
        emailMessageDTO.setFromAddress( entity.getFromAddress() );
        emailMessageDTO.setSubject( entity.getSubject() );
        emailMessageDTO.setBody( entity.getBody() );
        emailMessageDTO.setCreatedDate( entity.getCreatedDate() );
        emailMessageDTO.setType( entity.getType() );

        return emailMessageDTO;
    }
}
