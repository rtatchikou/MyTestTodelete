<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>User.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Dropbox</a> &gt; <a href="index.source.html" class="el_package">com.lyncwork.services.dropbox.domain</a> &gt; <span class="el_source">User.java</span></div><h1>User.java</h1><pre class="source lang-java linenums">package com.lyncwork.services.dropbox.domain;

import com.lyncwork.services.dropbox.domain.enumeration.UserRole;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import javax.persistence.*;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * A Company.
 */
@Entity
@Table(name = &quot;user&quot;)
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
<span class="nc" id="L21">public class User implements Serializable {</span>

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotBlank
    @Email
    @Column(name = &quot;email_primary&quot;)
    private String emailPrimary;

    @NotBlank
    @Column(name = &quot;username&quot;)
    private String username;

    @ManyToOne
    private Company company;

    @NotNull
    @Enumerated(EnumType.STRING)
    @Column(name = &quot;user_role&quot;)
    private UserRole userRole;

<span class="nc" id="L46">    @ManyToMany(mappedBy = &quot;sharers&quot;, fetch = FetchType.LAZY)</span>
    private Set&lt;File&gt;  fileSheredWithUser= new HashSet&lt;&gt;();

<span class="nc" id="L49">    @OneToMany(mappedBy = &quot;fileOwner&quot;)</span>
    private Set&lt;File&gt;  filesOwnedByUser = new HashSet&lt;&gt;();

    public Long getId() {
<span class="nc" id="L53">        return id;</span>
    }

    public void setId(Long id) {
<span class="nc" id="L57">        this.id = id;</span>
<span class="nc" id="L58">    }</span>

    public String getEmailPrimary() {
<span class="nc" id="L61">        return emailPrimary;</span>
    }

    public void setEmailPrimary(String emailPrimary) {
<span class="nc" id="L65">        this.emailPrimary = emailPrimary;</span>
<span class="nc" id="L66">    }</span>

    public String getUsername() {
<span class="nc" id="L69">        return username;</span>
    }

    public void setUsername(String username) {
<span class="nc" id="L73">        this.username = username;</span>
<span class="nc" id="L74">    }</span>

    public Company getCompany() {
<span class="nc" id="L77">        return company;</span>
    }

    public void setCompany(Company company) {
<span class="nc" id="L81">        this.company = company;</span>
<span class="nc" id="L82">    }</span>

    public UserRole getUserRole() {
<span class="nc" id="L85">        return userRole;</span>
    }

    public void setUserRole(UserRole userRole) {
<span class="nc" id="L89">        this.userRole = userRole;</span>
<span class="nc" id="L90">    }</span>

    public Set&lt;File&gt; getFileSheredWithUser() {
<span class="nc" id="L93">        return fileSheredWithUser;</span>
    }

    public void setFileSheredWithUser(Set&lt;File&gt; fileSheredWithUser) {
<span class="nc" id="L97">        this.fileSheredWithUser = fileSheredWithUser;</span>
<span class="nc" id="L98">    }</span>

    public Set&lt;File&gt; getFilesOwnedByUser() {
<span class="nc" id="L101">        return filesOwnedByUser;</span>
    }

    public void setFilesOwnedByUser(Set&lt;File&gt; filesOwnedByUser) {
<span class="nc" id="L105">        this.filesOwnedByUser = filesOwnedByUser;</span>
<span class="nc" id="L106">    }</span>

    @Override
    public String toString() {
<span class="nc" id="L110">        return &quot;User{&quot; +</span>
                &quot;id=&quot; + id +
                &quot;, emailPrimary='&quot; + emailPrimary + '\'' +
                &quot;, username='&quot; + username + '\'' +
                &quot;, company=&quot; + company +
                &quot;, userRole=&quot; + userRole +
                &quot;, fileSheredWithUser=&quot; + fileSheredWithUser +
                &quot;, filesOwnedByUser=&quot; + filesOwnedByUser +
                '}';
    }
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.5.201910111838</span></div></body></html>