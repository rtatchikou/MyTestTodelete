<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>UserMapperImpl.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Dropbox</a> &gt; <a href="index.source.html" class="el_package">com.lyncwork.services.dropbox.service.mapper</a> &gt; <span class="el_source">UserMapperImpl.java</span></div><h1>UserMapperImpl.java</h1><pre class="source lang-java linenums">package com.lyncwork.services.dropbox.service.mapper;

import com.lyncwork.services.dropbox.domain.Company;
import com.lyncwork.services.dropbox.domain.File;
import com.lyncwork.services.dropbox.domain.User;
import com.lyncwork.services.dropbox.service.dto.CompanyDTO;
import com.lyncwork.services.dropbox.service.dto.FileDTO;
import com.lyncwork.services.dropbox.service.dto.UserDTO;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = &quot;org.mapstruct.ap.MappingProcessor&quot;,
    date = &quot;2021-01-26T17:07:10-0500&quot;,
    comments = &quot;version: 1.3.1.Final, compiler: javac, environment: Java 11.0.9 (Oracle Corporation)&quot;
)
@Component
<span class="nc" id="L22">public class UserMapperImpl implements UserMapper {</span>

    @Override
    public List&lt;User&gt; toEntity(List&lt;UserDTO&gt; dtoList) {
<span class="nc bnc" id="L26" title="All 2 branches missed.">        if ( dtoList == null ) {</span>
<span class="nc" id="L27">            return null;</span>
        }

<span class="nc" id="L30">        List&lt;User&gt; list = new ArrayList&lt;User&gt;( dtoList.size() );</span>
<span class="nc bnc" id="L31" title="All 2 branches missed.">        for ( UserDTO userDTO : dtoList ) {</span>
<span class="nc" id="L32">            list.add( toEntity( userDTO ) );</span>
<span class="nc" id="L33">        }</span>

<span class="nc" id="L35">        return list;</span>
    }

    @Override
    public List&lt;UserDTO&gt; toDto(List&lt;User&gt; entityList) {
<span class="nc bnc" id="L40" title="All 2 branches missed.">        if ( entityList == null ) {</span>
<span class="nc" id="L41">            return null;</span>
        }

<span class="nc" id="L44">        List&lt;UserDTO&gt; list = new ArrayList&lt;UserDTO&gt;( entityList.size() );</span>
<span class="nc bnc" id="L45" title="All 2 branches missed.">        for ( User user : entityList ) {</span>
<span class="nc" id="L46">            list.add( toDto( user ) );</span>
<span class="nc" id="L47">        }</span>

<span class="nc" id="L49">        return list;</span>
    }

    @Override
    public UserDTO toDto(User entity) {
<span class="nc bnc" id="L54" title="All 2 branches missed.">        if ( entity == null ) {</span>
<span class="nc" id="L55">            return null;</span>
        }

<span class="nc" id="L58">        UserDTO userDTO = new UserDTO();</span>

<span class="nc" id="L60">        userDTO.setId( entity.getId() );</span>
<span class="nc" id="L61">        userDTO.setEmailPrimary( entity.getEmailPrimary() );</span>
<span class="nc" id="L62">        userDTO.setUsername( entity.getUsername() );</span>
<span class="nc" id="L63">        userDTO.setCompany( companyToCompanyDTO( entity.getCompany() ) );</span>
<span class="nc" id="L64">        userDTO.setUserRole( entity.getUserRole() );</span>
<span class="nc" id="L65">        userDTO.setFileSheredWithUser( fileSetToFileDTOSet( entity.getFileSheredWithUser() ) );</span>
<span class="nc" id="L66">        userDTO.setFilesOwnedByUser( fileSetToFileDTOSet( entity.getFilesOwnedByUser() ) );</span>

<span class="nc" id="L68">        return userDTO;</span>
    }

    @Override
    public User toEntity(UserDTO dto) {
<span class="nc bnc" id="L73" title="All 2 branches missed.">        if ( dto == null ) {</span>
<span class="nc" id="L74">            return null;</span>
        }

<span class="nc" id="L77">        User user = new User();</span>

<span class="nc" id="L79">        user.setId( dto.getId() );</span>
<span class="nc" id="L80">        user.setEmailPrimary( dto.getEmailPrimary() );</span>
<span class="nc" id="L81">        user.setUsername( dto.getUsername() );</span>
<span class="nc" id="L82">        user.setCompany( companyDTOToCompany( dto.getCompany() ) );</span>
<span class="nc" id="L83">        user.setUserRole( dto.getUserRole() );</span>
<span class="nc" id="L84">        user.setFileSheredWithUser( fileDTOSetToFileSet( dto.getFileSheredWithUser() ) );</span>
<span class="nc" id="L85">        user.setFilesOwnedByUser( fileDTOSetToFileSet( dto.getFilesOwnedByUser() ) );</span>

<span class="nc" id="L87">        return user;</span>
    }

    protected CompanyDTO companyToCompanyDTO(Company company) {
<span class="nc bnc" id="L91" title="All 2 branches missed.">        if ( company == null ) {</span>
<span class="nc" id="L92">            return null;</span>
        }

<span class="nc" id="L95">        CompanyDTO companyDTO = new CompanyDTO();</span>

<span class="nc" id="L97">        companyDTO.setId( company.getId() );</span>
<span class="nc" id="L98">        companyDTO.setTenantId( company.getTenantId() );</span>
<span class="nc" id="L99">        companyDTO.setCompanyName( company.getCompanyName() );</span>
<span class="nc" id="L100">        companyDTO.setTeamFolderName( company.getTeamFolderName() );</span>
<span class="nc" id="L101">        companyDTO.setTeamFolderNameSpaceId( company.getTeamFolderNameSpaceId() );</span>

<span class="nc" id="L103">        return companyDTO;</span>
    }

    protected Set&lt;UserDTO&gt; userSetToUserDTOSet(Set&lt;User&gt; set) {
<span class="nc bnc" id="L107" title="All 2 branches missed.">        if ( set == null ) {</span>
<span class="nc" id="L108">            return null;</span>
        }

<span class="nc" id="L111">        Set&lt;UserDTO&gt; set1 = new HashSet&lt;UserDTO&gt;( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );</span>
<span class="nc bnc" id="L112" title="All 2 branches missed.">        for ( User user : set ) {</span>
<span class="nc" id="L113">            set1.add( toDto( user ) );</span>
<span class="nc" id="L114">        }</span>

<span class="nc" id="L116">        return set1;</span>
    }

    protected FileDTO fileToFileDTO(File file) {
<span class="nc bnc" id="L120" title="All 2 branches missed.">        if ( file == null ) {</span>
<span class="nc" id="L121">            return null;</span>
        }

<span class="nc" id="L124">        FileDTO fileDTO = new FileDTO();</span>

<span class="nc" id="L126">        fileDTO.setId( file.getId() );</span>
<span class="nc" id="L127">        fileDTO.setFileName( file.getFileName() );</span>
<span class="nc" id="L128">        fileDTO.setFilePath( file.getFilePath() );</span>
<span class="nc" id="L129">        fileDTO.setFileOwner( toDto( file.getFileOwner() ) );</span>
<span class="nc" id="L130">        fileDTO.setSharers( userSetToUserDTOSet( file.getSharers() ) );</span>

<span class="nc" id="L132">        return fileDTO;</span>
    }

    protected Set&lt;FileDTO&gt; fileSetToFileDTOSet(Set&lt;File&gt; set) {
<span class="nc bnc" id="L136" title="All 2 branches missed.">        if ( set == null ) {</span>
<span class="nc" id="L137">            return null;</span>
        }

<span class="nc" id="L140">        Set&lt;FileDTO&gt; set1 = new HashSet&lt;FileDTO&gt;( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );</span>
<span class="nc bnc" id="L141" title="All 2 branches missed.">        for ( File file : set ) {</span>
<span class="nc" id="L142">            set1.add( fileToFileDTO( file ) );</span>
<span class="nc" id="L143">        }</span>

<span class="nc" id="L145">        return set1;</span>
    }

    protected Company companyDTOToCompany(CompanyDTO companyDTO) {
<span class="nc bnc" id="L149" title="All 2 branches missed.">        if ( companyDTO == null ) {</span>
<span class="nc" id="L150">            return null;</span>
        }

<span class="nc" id="L153">        Company company = new Company();</span>

<span class="nc" id="L155">        company.setId( companyDTO.getId() );</span>
<span class="nc" id="L156">        company.setTenantId( companyDTO.getTenantId() );</span>
<span class="nc" id="L157">        company.setCompanyName( companyDTO.getCompanyName() );</span>
<span class="nc" id="L158">        company.setTeamFolderName( companyDTO.getTeamFolderName() );</span>
<span class="nc" id="L159">        company.setTeamFolderNameSpaceId( companyDTO.getTeamFolderNameSpaceId() );</span>

<span class="nc" id="L161">        return company;</span>
    }

    protected Set&lt;User&gt; userDTOSetToUserSet(Set&lt;UserDTO&gt; set) {
<span class="nc bnc" id="L165" title="All 2 branches missed.">        if ( set == null ) {</span>
<span class="nc" id="L166">            return null;</span>
        }

<span class="nc" id="L169">        Set&lt;User&gt; set1 = new HashSet&lt;User&gt;( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );</span>
<span class="nc bnc" id="L170" title="All 2 branches missed.">        for ( UserDTO userDTO : set ) {</span>
<span class="nc" id="L171">            set1.add( toEntity( userDTO ) );</span>
<span class="nc" id="L172">        }</span>

<span class="nc" id="L174">        return set1;</span>
    }

    protected File fileDTOToFile(FileDTO fileDTO) {
<span class="nc bnc" id="L178" title="All 2 branches missed.">        if ( fileDTO == null ) {</span>
<span class="nc" id="L179">            return null;</span>
        }

<span class="nc" id="L182">        File file = new File();</span>

<span class="nc" id="L184">        file.setId( fileDTO.getId() );</span>
<span class="nc" id="L185">        file.setFileName( fileDTO.getFileName() );</span>
<span class="nc" id="L186">        file.setFilePath( fileDTO.getFilePath() );</span>
<span class="nc" id="L187">        file.setFileOwner( toEntity( fileDTO.getFileOwner() ) );</span>
<span class="nc" id="L188">        file.setSharers( userDTOSetToUserSet( fileDTO.getSharers() ) );</span>

<span class="nc" id="L190">        return file;</span>
    }

    protected Set&lt;File&gt; fileDTOSetToFileSet(Set&lt;FileDTO&gt; set) {
<span class="nc bnc" id="L194" title="All 2 branches missed.">        if ( set == null ) {</span>
<span class="nc" id="L195">            return null;</span>
        }

<span class="nc" id="L198">        Set&lt;File&gt; set1 = new HashSet&lt;File&gt;( Math.max( (int) ( set.size() / .75f ) + 1, 16 ) );</span>
<span class="nc bnc" id="L199" title="All 2 branches missed.">        for ( FileDTO fileDTO : set ) {</span>
<span class="nc" id="L200">            set1.add( fileDTOToFile( fileDTO ) );</span>
<span class="nc" id="L201">        }</span>

<span class="nc" id="L203">        return set1;</span>
    }
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.5.201910111838</span></div></body></html>