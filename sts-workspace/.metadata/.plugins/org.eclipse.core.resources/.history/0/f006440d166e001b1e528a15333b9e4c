package com.lyncwork.services.dropbox.service.mapper;

import com.lyncwork.services.dropbox.domain.User;
import com.lyncwork.services.dropbox.service.dto.UserDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2021-02-13T11:07:51-0500",
    comments = "version: 1.3.1.Final, compiler: Eclipse JDT (IDE) 1.3.1100.v20200828-0941, environment: Java 15 (Oracle Corporation)"
)
@Component
public class UserMapperImpl implements UserMapper {

    @Autowired
    private CompanyMapper companyMapper;

    @Override
    public List<User> toEntity(List<UserDTO> dtoList) {
        if ( dtoList == null ) {
            return null;
        }

        List<User> list = new ArrayList<User>( dtoList.size() );
        for ( UserDTO userDTO : dtoList ) {
            list.add( toEntity( userDTO ) );
        }

        return list;
    }

    @Override
    public List<UserDTO> toDto(List<User> entityList) {
        if ( entityList == null ) {
            return null;
        }

        List<UserDTO> list = new ArrayList<UserDTO>( entityList.size() );
        for ( User user : entityList ) {
            list.add( toDto( user ) );
        }

        return list;
    }

    @Override
    public UserDTO toDto(User entity) {
        if ( entity == null ) {
            return null;
        }

        UserDTO userDTO = new UserDTO();

        userDTO.setCompany( companyMapper.toDto( entity.getCompany() ) );
        userDTO.setUserRole( entity.getUserRole() );
        userDTO.setEmailPrimary( entity.getEmailPrimary() );
        userDTO.setUsername( entity.getUsername() );
        userDTO.setId( entity.getId() );

        return userDTO;
    }

    @Override
    public User toEntity(UserDTO dto) {
        if ( dto == null ) {
            return null;
        }

        User user = new User();

        user.setCompany( companyMapper.toEntity( dto.getCompany() ) );
        user.setUserRole( dto.getUserRole() );
        user.setEmailPrimary( dto.getEmailPrimary() );
        user.setUsername( dto.getUsername() );
        user.setId( dto.getId() );

        return user;
    }
}
