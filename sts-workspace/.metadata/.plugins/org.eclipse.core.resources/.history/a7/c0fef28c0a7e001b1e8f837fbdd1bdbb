<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>RequestDropboxAPIConfig.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Dropbox</a> &gt; <a href="index.source.html" class="el_package">com.lyncwork.services.dropbox.client.dropbox.config</a> &gt; <span class="el_source">RequestDropboxAPIConfig.java</span></div><h1>RequestDropboxAPIConfig.java</h1><pre class="source lang-java linenums">package com.lyncwork.services.dropbox.client.dropbox.config;

import com.lyncwork.services.dropbox.client.dropbox.service.AuthService;
import feign.RequestInterceptor;
import feign.codec.Decoder;
import feign.codec.Encoder;
import feign.form.FormEncoder;
import feign.jackson.JacksonDecoder;
import org.springframework.beans.factory.ObjectFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.http.HttpMessageConverters;
import org.springframework.cloud.openfeign.support.SpringEncoder;
import org.springframework.context.annotation.Bean;


<span class="nc" id="L16">public class RequestDropboxAPIConfig  {</span>

    @Autowired
    private AuthService authService;

    @Bean
    public Encoder feignFormEncoder(ObjectFactory&lt;HttpMessageConverters&gt; messageConverters) {
<span class="nc" id="L23">        return new FormEncoder(new SpringEncoder(messageConverters));</span>
    }

    @Bean
    public Decoder feignDecoder() {
<span class="nc" id="L28">        return new JacksonDecoder();</span>
    }

    @Bean
    public RequestInterceptor requestInterceptor() {
<span class="nc" id="L33">        return requestTemplate -&gt; {</span>
<span class="nc" id="L34">            requestTemplate.header(&quot;Authorization&quot;, &quot;Bearer &quot; + authService.getToken());</span>
<span class="nc" id="L35">        };</span>
    }
}

</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.5.201910111838</span></div></body></html>