package com.lyncwork.services.gusto.service.mapper;

import com.lyncwork.services.expensify.domain.UserIntegrationQueue;
import com.lyncwork.services.gusto.service.dto.UserIntegrationQueueDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2020-12-11T16:26:43-0500",
    comments = "version: 1.3.1.Final, compiler: Eclipse JDT (IDE) 1.3.1100.v20200828-0941, environment: Java 15 (Oracle Corporation)"
)
@Component
public class UserIntegrationQueueMapperImpl implements UserIntegrationQueueMapper {

    @Autowired
    private UserIntegrationMessageMapper userIntegrationMessageMapper;

    @Override
    public List<UserIntegrationQueueDTO> toDto(List<UserIntegrationQueue> arg0) {
        if ( arg0 == null ) {
            return null;
        }

        List<UserIntegrationQueueDTO> list = new ArrayList<UserIntegrationQueueDTO>( arg0.size() );
        for ( UserIntegrationQueue userIntegrationQueue : arg0 ) {
            list.add( toDto( userIntegrationQueue ) );
        }

        return list;
    }

    @Override
    public List<UserIntegrationQueue> toEntity(List<UserIntegrationQueueDTO> arg0) {
        if ( arg0 == null ) {
            return null;
        }

        List<UserIntegrationQueue> list = new ArrayList<UserIntegrationQueue>( arg0.size() );
        for ( UserIntegrationQueueDTO userIntegrationQueueDTO : arg0 ) {
            list.add( toEntity( userIntegrationQueueDTO ) );
        }

        return list;
    }

    @Override
    public UserIntegrationQueue toEntity(UserIntegrationQueueDTO dto) {
        if ( dto == null ) {
            return null;
        }

        UserIntegrationQueue userIntegrationQueue = new UserIntegrationQueue();

        userIntegrationQueue.setConsumer( dto.getConsumer() );
        userIntegrationQueue.setId( dto.getId() );
        userIntegrationQueue.setMessage( userIntegrationMessageMapper.toEntity( dto.getMessage() ) );
        userIntegrationQueue.setStatus( dto.getStatus() );

        return userIntegrationQueue;
    }

    @Override
    public UserIntegrationQueueDTO toDto(UserIntegrationQueue entity) {
        if ( entity == null ) {
            return null;
        }

        UserIntegrationQueueDTO userIntegrationQueueDTO = new UserIntegrationQueueDTO();

        userIntegrationQueueDTO.setId( entity.getId() );
        userIntegrationQueueDTO.setConsumer( entity.getConsumer() );
        userIntegrationQueueDTO.setMessage( userIntegrationMessageMapper.toDto( entity.getMessage() ) );
        userIntegrationQueueDTO.setStatus( entity.getStatus() );

        return userIntegrationQueueDTO;
    }
}
