package com.lyncwork.services.dropbox.processors;

import com.lyncwork.clients.frontdoor.model.LyncWorkUser;
import com.lyncwork.services.hellosign.repository.hibernate.TenantContext;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.scheduling.annotation.Scheduled;
import org.thymeleaf.util.StringUtils;

import java.util.Arrays;
import java.util.List;
import java.util.Locale;

public abstract class Processor {

   public abstract <T> T provisionUser(LyncWorkUser lyncWorkUser);

   public abstract String getApplicationName();

    @Value("${lyncworks.schemas}")
    String schemas;


    private void consumeMessageQueue(){

    }
    @Scheduled(fixedRate = 60000)
    public void consume() {

        List<String> tenants = Arrays.asList(this.schemas.split(","));
        tenants.stream()
                .map(String::trim)
                .forEach(schema -> {
                    TenantContext.setTenant(StringUtils.toUpperCase(schema, Locale.ENGLISH));
                    consumeMessageQueue();
                });

        TenantContext.setTenant(TenantContext.DEFAULT_SCHEMA);
        consumeMessageQueue();
    }
}
