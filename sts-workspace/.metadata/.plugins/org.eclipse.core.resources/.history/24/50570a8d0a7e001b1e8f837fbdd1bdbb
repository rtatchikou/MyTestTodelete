<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>CompanyResource.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Dropbox</a> &gt; <a href="index.source.html" class="el_package">com.lyncwork.services.dropbox.web.rest</a> &gt; <span class="el_source">CompanyResource.java</span></div><h1>CompanyResource.java</h1><pre class="source lang-java linenums">package com.lyncwork.services.dropbox.web.rest;


import com.lyncwork.services.dropbox.client.dropbox.service.TeamFolderService;
import com.lyncwork.services.dropbox.model.request.ListFilesRequest;
import com.lyncwork.services.dropbox.model.request.ProvisionTenantRequest;
import com.lyncwork.services.dropbox.model.request.UploadRequest;
import com.lyncwork.services.dropbox.model.response.ListFilesResponse;
import com.lyncwork.services.dropbox.model.response.ProvisionTenantResponse;
import com.lyncwork.services.dropbox.model.response.UploadResponse;
import com.lyncwork.services.dropbox.service.CompanyService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

@RestController
@RequestMapping(&quot;/api&quot;)
<span class="nc" id="L19">public class CompanyResource {</span>

    @Autowired
    private TeamFolderService teamFolderService;

    @Autowired
    private CompanyService companyService;


    @PostMapping(&quot;/provision/{tenantId}&quot;)
    public ResponseEntity&lt;ProvisionTenantResponse&gt; provisionTenant(@PathVariable String tenantId, @RequestBody ProvisionTenantRequest provisionTenant) {

<span class="nc" id="L31">        ProvisionTenantResponse  response = companyService.provisionTenant(tenantId, provisionTenant);</span>

<span class="nc" id="L33">        return ResponseEntity.ok().body(response);</span>
    }


    @PostMapping(&quot;/upload&quot;)
    public ResponseEntity&lt;UploadResponse&gt; upload(@RequestParam(&quot;file&quot;) MultipartFile file, @RequestBody UploadRequest uploadRequest) {

<span class="nc" id="L40">        UploadResponse  response = companyService.upload(file, uploadRequest);</span>

<span class="nc" id="L42">        return ResponseEntity.ok().body(response);</span>
    }

    @GetMapping(&quot;/get/tenant/{tenantId}/file/{fileId}&quot;)
    public ResponseEntity&lt;MultipartFile&gt; getFile( @PathVariable(&quot;tenantId&quot;) String tenantId,@PathVariable(&quot;fileId&quot;) String fileId ) {

<span class="nc" id="L48">        MultipartFile  response = companyService.getFile(tenantId, fileId);</span>

<span class="nc" id="L50">        return ResponseEntity.ok().body(response);</span>
    }

    @PostMapping(&quot;/list&quot;)
    public ResponseEntity&lt;ListFilesResponse&gt; listFiles(@RequestBody ListFilesRequest listFilesRequest) {

<span class="nc" id="L56">        ListFilesResponse  response = companyService.listFiles(listFilesRequest);</span>

<span class="nc" id="L58">        return ResponseEntity.ok().body(response);</span>
    }

}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.5.201910111838</span></div></body></html>