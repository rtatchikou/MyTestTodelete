package com.lyncwork.services.store.service.mapper;

import com.lyncwork.services.store.domain.Team;
import com.lyncwork.services.store.service.dto.TeamDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2020-11-10T19:26:41-0500",
    comments = "version: 1.3.1.Final, compiler: javac, environment: Java 11.0.9 (Oracle Corporation)"
)
@Component
public class TeamMapperImpl implements TeamMapper {

    @Override
    public List<Team> toEntity(List<TeamDTO> dtoList) {
        if ( dtoList == null ) {
            return null;
        }

        List<Team> list = new ArrayList<Team>( dtoList.size() );
        for ( TeamDTO teamDTO : dtoList ) {
            list.add( toEntity( teamDTO ) );
        }

        return list;
    }

    @Override
    public List<TeamDTO> toDto(List<Team> entityList) {
        if ( entityList == null ) {
            return null;
        }

        List<TeamDTO> list = new ArrayList<TeamDTO>( entityList.size() );
        for ( Team team : entityList ) {
            list.add( toDto( team ) );
        }

        return list;
    }

    @Override
    public TeamDTO toDto(Team entity) {
        if ( entity == null ) {
            return null;
        }

        TeamDTO teamDTO = new TeamDTO();

        teamDTO.setId( entity.getId() );
        teamDTO.setTeamName( entity.getTeamName() );
        teamDTO.setTeamDesc( entity.getTeamDesc() );
        teamDTO.setTeamColor( entity.getTeamColor() );

        return teamDTO;
    }

    @Override
    public Team toEntity(TeamDTO dto) {
        if ( dto == null ) {
            return null;
        }

        Team team = new Team();

        team.setId( dto.getId() );
        team.setTeamColor( dto.getTeamColor() );
        team.setTeamName( dto.getTeamName() );
        team.setTeamDesc( dto.getTeamDesc() );

        return team;
    }
}
