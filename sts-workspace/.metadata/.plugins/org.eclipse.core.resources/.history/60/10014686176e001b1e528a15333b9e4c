package com.lyncwork.services.hellosign.client.hellosign.service.impl;

import com.amazonaws.services.managedblockchain.model.DeleteMemberRequest;
import com.lyncwork.services.hellosign.client.dropbox.model.request.member.add.AddMemberRequest;
import com.lyncwork.services.hellosign.client.dropbox.model.request.member.list.ListMemberRequest;
import com.lyncwork.services.hellosign.client.dropbox.model.request.member.recover.RecoverMemberRequest;
import com.lyncwork.services.hellosign.client.dropbox.model.response.member.add.AddMemberWrapper;
import com.lyncwork.services.hellosign.client.dropbox.model.response.member.delete.DeleteResponse;
import com.lyncwork.services.hellosign.client.dropbox.model.response.member.list.ListMember;
import com.lyncwork.services.hellosign.client.dropbox.model.response.member.recover.RecoverMemberErrorResponse;
import com.lyncwork.services.hellosign.client.hellosign.client.member.DropboxMemberClientFeign;
import com.lyncwork.services.hellosign.client.hellosign.service.DropboxMemberService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;


@Component
public class DropboxMemberServiceImpl implements DropboxMemberService {

	private static final Logger log = LoggerFactory.getLogger(DropboxMemberServiceImpl.class);
	@Autowired
	private DropboxMemberClientFeign dropboxMemberClientFeign;
	
	@Override
	public void addMember(AddMemberRequest addMember) {
		AddMemberWrapper wrapper = dropboxMemberClientFeign.addMember(addMember);
		log.info("Add member response : {}", wrapper);
	}


	@Override
	public void getMembers(int limit, boolean includeRemoved) {
		ListMember members = dropboxMemberClientFeign.getMembers(new ListMemberRequest(limit, includeRemoved));
		log.info("List members : {}", members);
	}


	@Override
	public void deleteMember(DeleteMemberRequest request) {
		DeleteResponse deleteResponse = dropboxMemberClientFeign.deleteMember(request);
		log.info("Delete member : {}", deleteResponse);
	}


	@Override
	public void recoverMember(RecoverMemberRequest request) {
		RecoverMemberErrorResponse err = dropboxMemberClientFeign.recoverMember(request);
		if(err != null) {
			log.warn("Recover member err response : {}", err);
		} else {
			log.info("User {} has been recovered. Please check the dropbox console.", request.getUser().getTeamMemberId());
		}
		
	}

}
