<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../jacoco-resources/report.gif" type="image/gif"/><title>TenantContext.java</title><link rel="stylesheet" href="../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../index.html" class="el_report">Dropbox</a> &gt; <a href="index.source.html" class="el_package">com.lyncwork.services.dropbox.repository.hibernate</a> &gt; <span class="el_source">TenantContext.java</span></div><h1>TenantContext.java</h1><pre class="source lang-java linenums">package com.lyncwork.services.dropbox.repository.hibernate;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.thymeleaf.util.StringUtils;

import java.net.URL;
import java.util.Locale;
import java.util.Optional;

@Component
<span class="nc" id="L14">public class TenantContext {</span>
<span class="nc" id="L15">    private static final Logger logger = LoggerFactory.getLogger(TenantContext.class);</span>

<span class="nc" id="L17">    private static ThreadLocal&lt;String&gt; currentTenant = new InheritableThreadLocal&lt;&gt;();</span>
<span class="nc" id="L18">    private static ThreadLocal&lt;URL&gt; currentReferer = new InheritableThreadLocal&lt;&gt;();</span>
    public static final String DEFAULT_SCHEMA = &quot;PUBLIC&quot;;

    private static String domain;

    private static String storeBasePath;

    private static String frontendAppUrl;

    private static String frontDoorBasePath;

    public static String getCurrentTenant() {
<span class="nc" id="L30">        return currentTenant.get();</span>
    }

    public static void setTenant(String tenant) {
<span class="nc" id="L34">        currentTenant.set(tenant);</span>
<span class="nc" id="L35">    }</span>

    public static Optional&lt;String&gt; getRefererScheme(){
<span class="nc bnc" id="L38" title="All 2 branches missed.">        return currentReferer.get() != null ? Optional.of(currentReferer.get().getProtocol()) : Optional.empty();</span>
    }

    public static Optional&lt;String&gt; getRefererPort(){
<span class="nc bnc" id="L42" title="All 2 branches missed.">        if(currentReferer.get() != null){</span>
<span class="nc" id="L43">            int port = currentReferer.get().getPort();</span>
<span class="nc bnc" id="L44" title="All 2 branches missed.">            return port != -1 ? Optional.of(String.format(&quot;%d&quot;, port)) : Optional.empty();</span>
        }
<span class="nc" id="L46">        return Optional.empty();</span>
    }

    public static Optional&lt;String&gt; getRefererHost(){
<span class="nc bnc" id="L50" title="All 2 branches missed.">        return currentReferer.get() != null ? Optional.of(currentReferer.get().getHost()) : Optional.empty();</span>
    }

    public static Optional&lt;String&gt; getRefererDomain(){
<span class="nc bnc" id="L54" title="All 2 branches missed.">        if (currentReferer.get() != null){</span>
<span class="nc" id="L55">            String tenant = getCurrentTenant();</span>
<span class="nc" id="L56">            String host = currentReferer.get().getHost();</span>
<span class="nc" id="L57">            host = StringUtils.replace(host, StringUtils.toLowerCase(tenant, Locale.ENGLISH) + &quot;.&quot;, &quot;&quot;);</span>
<span class="nc" id="L58">            host = StringUtils.replace(host, &quot;api.&quot;, &quot;&quot;);</span>
<span class="nc" id="L59">            return Optional.of(host);</span>
        }

<span class="nc" id="L62">        return Optional.empty();</span>
    }

    public static String getDomain() {
<span class="nc" id="L66">        String result = domain;</span>

<span class="nc" id="L68">        Optional&lt;String&gt; host = getRefererHost();</span>
<span class="nc bnc" id="L69" title="All 4 branches missed.">        if (host != null &amp;&amp; !host.isEmpty()){</span>
<span class="nc" id="L70">            logger.debug(&quot; Referer Host: {}&quot;, host.get());</span>

<span class="nc bnc" id="L72" title="All 2 branches missed.">            if (StringUtils.equals(&quot;localhost&quot;, host.get())) {</span>
<span class="nc" id="L73">                result = host.get();</span>
            }
        }

<span class="nc" id="L77">        logger.debug(&quot; Domain: {}&quot;, result);</span>
<span class="nc" id="L78">        return result;</span>
    }

    public static String getFrontendDomain() {
<span class="nc" id="L82">        String domain = frontendAppUrl;</span>

<span class="nc" id="L84">        Optional&lt;String&gt; host = getRefererHost();</span>
<span class="nc bnc" id="L85" title="All 4 branches missed.">        if (host != null &amp;&amp; !host.isEmpty()) {</span>
<span class="nc" id="L86">            logger.debug(&quot; Referer Host: {}&quot;, host.get());</span>

<span class="nc bnc" id="L88" title="All 2 branches missed.">            if (!StringUtils.equals(&quot;localhost&quot;, host.get())) {</span>
<span class="nc" id="L89">                String scheme = &quot;https&quot;;</span>

<span class="nc" id="L91">                domain= getDomain();</span>
<span class="nc" id="L92">                domain= StringUtils.prepend(domain, TenantContext.getCurrentTenant().toLowerCase()+&quot;.&quot;);</span>

<span class="nc bnc" id="L94" title="All 2 branches missed.">                if (domain != null) {</span>
<span class="nc" id="L95">                    domain = String.format(&quot;%s://%s&quot;, scheme, domain);</span>
                }
            }
        }

<span class="nc" id="L100">        logger.debug(&quot; Frontend Domain: {}&quot;, domain);</span>
<span class="nc" id="L101">        return domain;</span>
    }

    public static String getStoreDomain() {
<span class="nc" id="L105">        String domain = storeBasePath;</span>

<span class="nc" id="L107">        logger.debug(&quot; Store Domain: {}&quot;, domain);</span>
<span class="nc" id="L108">        return domain;</span>
    }

    public static String getFrontdoorDomain() {
<span class="nc" id="L112">        String domain = frontDoorBasePath;</span>

<span class="nc" id="L114">        logger.debug(&quot; Frontdoor Domain: {}&quot;, domain);</span>
<span class="nc" id="L115">        return domain;</span>
    }

    public static URL getCurrentReferer() {
<span class="nc" id="L119">        return currentReferer.get();</span>
    }

    public static void setCurrentReferer(URL currentReferer) {
<span class="nc" id="L123">        TenantContext.currentReferer.set(currentReferer);</span>
<span class="nc" id="L124">    }</span>

    public static void clear() {
<span class="nc" id="L127">        currentTenant.remove();</span>
<span class="nc" id="L128">        currentReferer.remove();</span>
<span class="nc" id="L129">    }</span>

    @Value(&quot;${lyncworks.domain}&quot;)
    public void setDomain(String domain){
<span class="nc" id="L133">        TenantContext.domain = domain;</span>
<span class="nc" id="L134">    }</span>

    @Value(&quot;${lyncworks.store.basePath}&quot;)
    public void setStoreBasePath(String url){
<span class="nc" id="L138">        TenantContext.storeBasePath = url;</span>
<span class="nc" id="L139">    }</span>

    @Value(&quot;${lyncworks.frontend.app.url}&quot;)
    public void setFrontendAppUrl(String url){
<span class="nc" id="L143">        TenantContext.frontendAppUrl = url;</span>
<span class="nc" id="L144">    }</span>

    @Value(&quot;${lyncworks.frontDoor.basePath}&quot;)
    public void setFrontDoorBasePath(String url){
<span class="nc" id="L148">        TenantContext.frontDoorBasePath = url;</span>
<span class="nc" id="L149">    }</span>
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.5.201910111838</span></div></body></html>